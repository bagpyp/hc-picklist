{"version":3,"sources":["App.js","index.js"],"names":["App","PICKLIST_URL","useState","date","setDate","Picklist","a","setA","picks","setPicks","getPicks","fetch","res","json","json_res","useEffect","className","map","x","id","picked","togglePicked","method","src","alt","Date","toLocaleDateString","parseInt","toString","type","onChange","checked","Pick","parse","toLocaleString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAoFeA,MA/Ef,WAEE,IAAMC,EAAqE,oDAF9D,EAGUC,mBAAS,IAHnB,mBAGNC,EAHM,KAGDC,EAHC,KAKb,SAASC,IAAY,IAAD,EACDH,mBAAS,GADR,mBACXI,EADW,KACTC,EADS,OAEOL,mBAAS,IAFhB,mBAEXM,EAFW,KAELC,EAFK,KAGZC,EAAQ,uCAAG,8BAAAJ,EAAA,sEACGK,MAAMV,GADT,cACTW,EADS,gBAEQA,EAAIC,OAFZ,OAETC,EAFS,OAGfL,EAASK,EAAQ,MACjBV,EAAQU,EAAQ,MAJD,2CAAH,qDAsDd,OAhDAC,qBAAU,WACRL,MACC,CAACJ,IA+CF,qBAAKU,UAAU,WAAf,SACGR,EAAMS,KAAI,SAAAC,GAAC,OA9ChB,SAAcA,GAEZ,IAAMC,EAAKD,EAAC,OACRE,EAASF,EAAC,OAERG,EAAY,uCAAG,8BAAAf,EAAA,sEACDK,MAAMV,EAAa,gBAAgBkB,EAAI,CAACG,OAAO,QAD9C,cACbV,EADa,gBAEIA,EAAIC,OAFR,OAEbC,EAFa,OAGnBM,EAASN,EACTP,EAAKD,EAAE,GAJY,2CAAH,qDAOlB,OACE,sBAAKU,UAAcI,GAAUF,EAAC,OAAc,cAAgB,OAA5D,UAEE,qBAAKK,IAAKL,EAAC,YAAiBM,IAAI,YAChC,qBAAKR,UAAY,MAAjB,SAAwBE,EAAC,MACzB,qBAAKF,UAAY,MAAjB,SAAwBE,EAAC,MACzB,qBAAKF,UAAY,eAAjB,SAAiC,IAAIS,KAAKP,EAAC,cAAkBQ,mBAAmB,WAEhF,sBAAKV,UAAY,OAAjB,UACE,qBAAKA,UAAY,MAAjB,SAAwBE,EAAC,KAAWA,EAAC,oBAA2B,OAAQS,SAAST,EAAC,qBAA2B,GAAGU,WAAc,MAC9H,qBAAKZ,UAAY,WAAjB,SAA6BE,EAAC,WAC9B,qBAAKF,UAAY,OAAjB,SAAyBE,EAAC,OAC1B,qBAAKF,UAAY,YAAjB,SAA8BE,EAAC,YAC/B,qBAAKF,UAAY,MAAjB,SAAwBE,EAAC,MACzB,qBAAKF,UAAY,QAAjB,SAA0BE,EAAC,QAC3B,qBAAKF,UAAY,UAAjB,SAA4BE,EAAC,UAC7B,sBAAKF,UAAY,OAAjB,UAAyBE,EAAC,KAA1B,cAGF,qBAAKF,UAAY,UAAjB,SACE,wBAAOA,UAAU,SAAjB,UACGI,EACC,uBAAOS,KAAK,WAAWC,SAAUT,EAAcU,SAAO,IACpD,uBAAOF,KAAK,WAAWC,SAAUT,IACrC,sBAAML,UAAU,wBAvBmDG,GAiCzDa,CAAKd,QAK3B,OACE,gCACE,+CACgB,IAAIO,KAAKA,KAAKQ,MAAM9B,IAAO+B,eAAe,YAE1D,cAAC7B,EAAD,QC1EN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb132aa8.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nconst ENV = 'PROD'\n\nfunction App() {\n\n  const PICKLIST_URL = ((ENV === 'DEV') ? 'http://localhost:5000/picklist' : 'http://hillcrestsports-api.herokuapp.com/picklist')\n  const [date,setDate] = useState('')\n\n  function Picklist() {\n    const [a,setA] = useState(0)\n    const [picks,setPicks] = useState([])\n    const getPicks = async () => {\n      const res = await fetch(PICKLIST_URL)\n      const json_res = await res.json()\n      setPicks(json_res['data'])\n      setDate(json_res['date'])\n    }\n    useEffect(() => {\n      getPicks()\n    }, [a])\n\n    function Pick(x) {\n\n      const id = x['app_id']\n      var picked = x['picked']\n\n      const togglePicked = async () => {\n        const res = await fetch(PICKLIST_URL+'/pick?app_id='+id, {method:'PUT'})\n        const json_res = await res.json()\n        picked = json_res\n        setA(a+1)\n      }\n\n      return (\n        <div className = {(picked || x['picked']) ? 'pick picked' : 'pick'} key={id}>\n\n          <img src={x['v_image_url']} alt=\"product\"></img>\n          <div className = \"sku\">{x[\"sku\"]}</div>\n          <div className = \"qty\">{x[\"qty\"]}</div>\n          <div className = \"created_date\">{new Date(x[\"created_date\"]).toLocaleDateString('en-US')}</div>\n          \n          <div className = \"data\">\n            <div className = \"tag\">{x[\"tag\"] + (x[\"app_num_other_items\"] ? (' 1/'+ (parseInt(x[\"app_num_other_items\"]) + 1).toString()) : '')}</div>\n            <div className = \"app_name\">{x[\"app_name\"]}</div>\n            <div className = \"size\">{x[\"size\"]}</div>\n            <div className = \"app_color\">{x[\"app_color\"]}</div>\n            <div className = \"CAT\">{x[\"CAT\"]}</div>\n            <div className = \"BRAND\">{x[\"BRAND\"]}</div>\n            <div className = \"amt_per\">{x[\"amt_per\"]}</div>\n            <div className = \"qty0\">{x[\"qty0\"]} left</div>\n          </div>  \n\n          <div className = \"buttons\">\n            <label className=\"switch\">\n              {picked ? \n                <input type=\"checkbox\" onChange={togglePicked} checked></input> \n                : <input type=\"checkbox\" onChange={togglePicked}></input>}\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"picklist\">\n        {picks.map(x => Pick(x))}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h4>\n        Last Updated {new Date(Date.parse(date)).toLocaleString('en-US')}\n      </h4>\n      <Picklist />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}